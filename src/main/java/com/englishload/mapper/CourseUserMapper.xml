<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.englishload.mapper.CourseUserMapper" >
  <resultMap id="BaseResultMap" type="com.englishload.po.CourseUser" >
    <id column="course_user_id" property="courseUserId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="watchdate" property="watchdate" jdbcType="TIMESTAMP" />
    <result column="watchduration" property="watchduration" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.englishload.po.Course" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="coursename" property="coursename" jdbcType="VARCHAR" />
    <result column="coursetime" property="coursetime" jdbcType="TIMESTAMP" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="clickrate" property="clickrate" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="coursecontent" property="coursecontent" jdbcType="VARCHAR" />
    <result column="courseduration" property="courseduration" jdbcType="INTEGER" />
    <result column="coursepic" property="coursepic" jdbcType="VARCHAR" />
    <result column="courseintro" property="courseintro" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_user_id, user_id, course_id, watchdate, watchduration
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.englishload.po.CourseUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     </select>
    <insert id="insertCourseUser" parameterType="com.englishload.po.CourseUser">
  	  <selectKey keyProperty="courseUserId" order="AFTER" resultType="java.lang.Integer">
		select LAST_INSERT_ID() 
	  </selectKey>
  	    INSERT INTO course_user (user_id,course_id,watchdate) SELECT #{userId}, #{courseId},current_timestamp() FROM dual 
  	    WHERE not exists (select course_user.user_id,course_user.course_id from course_user 
  	    where course_user.user_id = ${userId} and course_user.course_id=#{courseId})
  	</insert>
<select id="findUserWatchedCourse" resultMap="BaseResultMap1" parameterType="java.lang.Integer" >
    SELECT course.* from course,course_user where course.course_id=course_user.course_id and user_id=#{userId} order by watchdate DESC;
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course_user
    where course_user_id = #{courseUserId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_user
    where course_user_id = #{courseUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.englishload.po.CourseUserExample" >
    delete from course_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.englishload.po.CourseUser" >
    insert into course_user (course_user_id, user_id, course_id, 
      watchdate, watchduration)
    values (#{courseUserId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{watchdate,jdbcType=TIMESTAMP}, #{watchduration,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.englishload.po.CourseUser" >
    insert into course_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseUserId != null" >
        course_user_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="watchdate != null" >
        watchdate,
      </if>
      <if test="watchduration != null" >
        watchduration,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseUserId != null" >
        #{courseUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="watchdate != null" >
        #{watchdate,jdbcType=TIMESTAMP},
      </if>
      <if test="watchduration != null" >
        #{watchduration,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.englishload.po.CourseUserExample" resultType="java.lang.Integer" >
    select count(*) from course_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_user
    <set >
      <if test="record.courseUserId != null" >
        course_user_id = #{record.courseUserId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.watchdate != null" >
        watchdate = #{record.watchdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.watchduration != null" >
        watchduration = #{record.watchduration,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_user
    set course_user_id = #{record.courseUserId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      watchdate = #{record.watchdate,jdbcType=TIMESTAMP},
      watchduration = #{record.watchduration,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.englishload.po.CourseUser" >
    update course_user
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="watchdate != null" >
        watchdate = #{watchdate,jdbcType=TIMESTAMP},
      </if>
      <if test="watchduration != null" >
        watchduration = #{watchduration,jdbcType=INTEGER},
      </if>
    </set>
    where course_user_id = #{courseUserId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.englishload.po.CourseUser" >
    update course_user
    set user_id = #{userId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      watchdate = #{watchdate,jdbcType=TIMESTAMP},
      watchduration = #{watchduration,jdbcType=INTEGER}
    where course_user_id = #{courseUserId,jdbcType=INTEGER}
  </update>
  
  
   <!-- delete by user_id -->
  <delete id="deleteByUserId" parameterType="java.lang.Integer">
  delete from course_user where user_id =#{userId,jdbcType=INTEGER};
  </delete>
</mapper>