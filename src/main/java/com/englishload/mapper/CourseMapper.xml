<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.englishload.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.englishload.po.Course" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="coursename" property="coursename" jdbcType="VARCHAR" />
    <result column="coursetime" property="coursetime" jdbcType="TIMESTAMP" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="clickrate" property="clickrate" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="coursecontent" property="coursecontent" jdbcType="VARCHAR" />
    <result column="courseduration" property="courseduration" jdbcType="INTEGER" />
    <result column="coursepic" property="coursepic" jdbcType="VARCHAR" />
    <result column="courseintro" property="courseintro" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectByCourseCategory"  resultMap="BaseResultMap" parameterType="String" >
select * from course,coursecategory where course.category_id=coursecategory.category_id and categoryname=#{categoryname}
</select>
<select id="selectByCourseGrade"  resultMap="BaseResultMap" parameterType="String" >
select course.* from course,gradecategory_course,gradecategory where gradecategory_course.grade_id=gradecategory.grade_id and course.course_id=gradecategory_course.course_id and gradecategory.gradename=#{gradename}
</select>  
<select id="selectByCourseGradeAndCategory"  resultMap="BaseResultMap">
select course.* from course,coursecategory,gradecategory,gradecategory_course 
where gradecategory_course.grade_id=gradecategory.grade_id and course.course_id=gradecategory_course.course_id
and course.category_id=coursecategory.category_id 
and coursecategory.categoryname=#{categoryname,jdbcType=VARCHAR}
and gradecategory.gradename=#{gradename,jdbcType=VARCHAR}  
</select>
    <select id="selectByCourseParName"  resultMap="BaseResultMap" parameterType="String" >
select * from course where coursename LIKE concat(concat('%',#{coursename}),'%')
</select>
     <select id="selectByCourseClickRate"  resultMap="BaseResultMap" parameterType="Integer" >
select * from course  order by clickrate desc  
</select> 
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, coursename, coursetime, teacher, clickrate, category_id, coursecontent, 
    courseduration, coursepic, courseintro, period
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.englishload.po.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.englishload.po.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.englishload.po.Course" >
   <selectKey keyProperty="courseId" order="AFTER" resultType="java.lang.Integer">
		select LAST_INSERT_ID() 
	  </selectKey>
    insert into course (course_id, coursename, coursetime, 
      teacher, clickrate, category_id, 
      coursecontent, courseduration, coursepic, 
      courseintro, period)
    values (#{courseId,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, #{coursetime,jdbcType=TIMESTAMP}, 
      #{teacher,jdbcType=VARCHAR}, #{clickrate,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
      #{coursecontent,jdbcType=VARCHAR}, #{courseduration,jdbcType=INTEGER}, #{coursepic,jdbcType=VARCHAR}, 
      #{courseintro,jdbcType=VARCHAR}, #{period,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.englishload.po.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="coursename != null" >
        coursename,
      </if>
      <if test="coursetime != null" >
        coursetime,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="clickrate != null" >
        clickrate,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="coursecontent != null" >
        coursecontent,
      </if>
      <if test="courseduration != null" >
        courseduration,
      </if>
      <if test="coursepic != null" >
        coursepic,
      </if>
      <if test="courseintro != null" >
        courseintro,
      </if>
      <if test="period != null" >
        period,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="coursetime != null" >
        #{coursetime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="clickrate != null" >
        #{clickrate,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="coursecontent != null" >
        #{coursecontent,jdbcType=VARCHAR},
      </if>
      <if test="courseduration != null" >
        #{courseduration,jdbcType=INTEGER},
      </if>
      <if test="coursepic != null" >
        #{coursepic,jdbcType=VARCHAR},
      </if>
      <if test="courseintro != null" >
        #{courseintro,jdbcType=VARCHAR},
      </if>
      <if test="period != null" >
        #{period,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.englishload.po.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null" >
        coursename = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.coursetime != null" >
        coursetime = #{record.coursetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.clickrate != null" >
        clickrate = #{record.clickrate,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.coursecontent != null" >
        coursecontent = #{record.coursecontent,jdbcType=VARCHAR},
      </if>
      <if test="record.courseduration != null" >
        courseduration = #{record.courseduration,jdbcType=INTEGER},
      </if>
      <if test="record.coursepic != null" >
        coursepic = #{record.coursepic,jdbcType=VARCHAR},
      </if>
      <if test="record.courseintro != null" >
        courseintro = #{record.courseintro,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null" >
        period = #{record.period,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      coursename = #{record.coursename,jdbcType=VARCHAR},
      coursetime = #{record.coursetime,jdbcType=TIMESTAMP},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      clickrate = #{record.clickrate,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      coursecontent = #{record.coursecontent,jdbcType=VARCHAR},
      courseduration = #{record.courseduration,jdbcType=INTEGER},
      coursepic = #{record.coursepic,jdbcType=VARCHAR},
      courseintro = #{record.courseintro,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.englishload.po.Course" >
    update course
    <set >
      <if test="coursename != null" >
        coursename = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="coursetime != null" >
        coursetime = #{coursetime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="clickrate != null" >
        clickrate = #{clickrate,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="coursecontent != null" >
        coursecontent = #{coursecontent,jdbcType=VARCHAR},
      </if>
      <if test="courseduration != null" >
        courseduration = #{courseduration,jdbcType=INTEGER},
      </if>
      <if test="coursepic != null" >
        coursepic = #{coursepic,jdbcType=VARCHAR},
      </if>
      <if test="courseintro != null" >
        courseintro = #{courseintro,jdbcType=VARCHAR},
      </if>
      <if test="period != null" >
        period = #{period,jdbcType=INTEGER},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.englishload.po.Course" >
    update course
    set coursename = #{coursename,jdbcType=VARCHAR},
      coursetime = #{coursetime,jdbcType=TIMESTAMP},
      teacher = #{teacher,jdbcType=VARCHAR},
      clickrate = #{clickrate,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      coursecontent = #{coursecontent,jdbcType=VARCHAR},
      courseduration = #{courseduration,jdbcType=INTEGER},
      coursepic = #{coursepic,jdbcType=VARCHAR},
      courseintro = #{courseintro,jdbcType=VARCHAR},
      period = #{period,jdbcType=INTEGER}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>